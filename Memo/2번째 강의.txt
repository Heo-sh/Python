2022-06-14
***format()*** p.61 -->형식지정자(%)를 주로 쓰는 것 같다.
ex) 1. 'Breakfast is {} and {}'.format('spam', 'eggs')
        spam은 첫번째 중괄호에 eggs는 두번째 중괄호로 들어간다.
    2.  zipcode = '06236'
        print('우편번호 : {}'.format(zipcode)) <<< '06236'은 zipcode 안에 들어가며, zipcode는 {}안에 들어가 출력이 된다.
ps)형식지정으로 출력하는 편이 많다.

***input() 입력함수***
-모든 함수는 '함수명()'이루어져 있다.
-입력함수는 키보드(표준입력장치)로부터 값을 입력받을 때 사용한다.
ex) 변수명 = input('')
     print(변수명) -> 출력
-input함수는 모든 입력을 문자열로 저장한다.
ex)정수 입력시, 문자열로 출력이 된다. 
    so 정수 출력을 원할 시 int를 붙인다.
    math = int(input(''))            -->>>20220614(2)
    print(math)            
***예제***
#이름과 나이 전화번호를 입력받아 출력해보자.
'''출력결과
제 이름은 홍길동입니다.
제 나이는 50살입니다.
제 전화번호는 010-1111-1111입니다.
'''
올바른 방법
name = input('이름을 입력하세요>>>')
age = int(input('나이를 입력하세요>>>'))
tel = input('전화번호를 입력하세요>>>')

print('제 이름은 %s입니다.' %name)
print('제 나이는 %d살입니다.' %age)
print('제 전화번호는 %s입니다.' %tel)
---------------------------------------------
잘못된 방법
이름 = input('이름을 입력하세요')
print('제 이름은 {}입니다.'.format(이름))

나이 = int(input('나이를 입력하세요'))
print('제 나이는 %d살입니다.'%나이)

전화번호 = '010', '1111', '1111'
print('제 전화번호는 {0}-{1}-{2}입니다.'.format(전화번호))
----------------------------------------------

***연산자***
-연산 기능이 있는 문자
ex) 식 : 2 + 3
    연산자 : +   <---연산자의 종류 다양(사칙연산, 비교값 등등)
    피연산자, 항 : 2, 3
1. 산술연산자(사칙연산) : +,-,*,/
// : 나눗셈을 하고 몫만 가져온다.
% : 모듈러(나눗셈을 하고 나머지만 가져온다.) if)python에서는 %%
** : 제곱연산자

2. 대입연산자 : 변수에 값을 저장하기 위해서 사용하는 연산자
ex) a = 1
    a, b = 1, 2   ==>한 번에 2개 이상의 변수에 값을 넣을 수 있다.
ps) '='는 의미가 아닌 오른쪽의 값을 왼쪽에 '저장한다' 라는 의미이다.
2.1) 복합대입연산자
+= -> a+=2 -> a = a+2 -> print(a) -> 3
-= -> a-=2 -> a = a-2 -> print(a) -> -1
*= -> a*=2 -> a = a*2 -> print(a) -> 2
**= 
/= -> a/=2 -> a = a/2 -> print(a) -> 
//=
%%=

3. 관계연산자 : 2개의 항을 비교하여 논리자료형(bool), 즉 예 or 아니오 2가지만으로 표현된다.
ps1 ) 항상 왼쪽을 기준으로 판별한다. 
ps2 ) 작거나 같다, 크거나 같다 경우 항상 >,<를 먼저 쓴다.
ps3 ) True와 False로만 출력이 된다.
< : 작다 ex) a < b -> a는 b보다 작다.
> : 크다     a < b -> a는 b보다 크다.
<= : 작거나 같다 
>= : 크거나 같다
== : 같다.
!= : 같지 않다.

4. 논리연산자 : 관계연산자와 함께 사용되는 연산자로 
                   2개 이상의 항을 논리적으로 연결할 때 사용한다.
and ex) a = 15 
          b = 10
          and a > 10 and b > 5 일때, 
         앞 항과 뒤의 항이 True이면 True이고, 둘 중 하나라도 True가 아니면 False이다.
or ex) a >10 or b < 5 일때,
        둘 중 하나라도 참이면 True이다.
not - 위의 2개와 다르게 1개의 항을 논리적으로 처리한다.
        True를 False로 False를 True로 바꿔준다.

5. 비트연산자 : 2진수와 관련된 것이 많다.
& : and
| (shift + \) : or
~ : not

6. 기타 연산자 중 삼항연산자
-조건식이 결과가 True인 경우와 False인 경우에 사용할 결과를 한번에 작성할 수 있는 연산자
ex) True if 조건식 else False
     x if C else y ->C가 True이면 x를 반환
                             False이면 y를 반환
----------------------------------------------------------------
K = int(input('국어 점수를 입력하세요 >>>'))
E = int(input('영어 점수를 입력하세요 >>>'))
M = int(input('수학 점수를 입력하세요 >>>'))

result = (K * E * M)/3%.1
print(result)
-------------------------------------------------
K = int(input('국어 점수를 입력하세요 >>>'))
E = int(input('영어 점수를 입력하세요 >>>'))
M = int(input('수학 점수를 입력하세요 >>>'))

total = K + E + M
avg = total/float(3)

result = '합격' if avg>=80 else '불합격'
print('평균은 %.1f점이고, 결과는 %s입니다.'%(avg,result))




























































