day04

[while문의 중첩]
while문의 내부에 또다른 while문이 나타나는 것을 while문의 중첩이라고 한다. 

반복해서 처리해야하는 대상이 2개 이상이면 while문의 중첩이 필요하다.

예) 총 5일동안 하루에 3시간씩 수업을 한다.
출력결과 : 1일차 1교시입니다.
	 1일차 2교시 입니다.
	 1일차 3교시 입니다.
	 2일차 1교시 입니다.
		.
		.
		.
	 5일차 3교시 입니다.
--------------------------------------------------------------
[컬렉션]
'모음'이라는 뜻으로 파이썬에서는 여러값을 묶어서 관리하는 자료형입니다.

-리스트(list)
	추가,수정,삭제가 언제나 가능     a=[1,2,3]
-튜플(tuple)
	생성되고 나면 변경 불가능	    a=(1,2,3)
-세트(set)
	중복된 값의 저장 불가능	    a={1,2,3}
-딕셔너리(dict)
	키와 값으로 관리를 합니다	    a={'age':25}

--------------------------------------------------------------
[리스트]
리스트는 여러 값을 저장할 때 가장 많이 사용하는 자료형입니다. 저장하고자 하는 값들의 자료형(int,float,str)들이 서로 다르더라도 하나의 리스트에 저장할 수 있습니다.

li = [100,3.14,'hello']
li = list() -> 비어있는 리스트를 미리 생성

1) 리스트의 인덱싱
   리스트는 저장된 요소들마다 고유 변호인 인덱스(index)를 부여하여 순서대로 관리할 수 있습니다.

li = [100, 3.14, 'hello']
index 0     1       2
print(li[0]) -> 100 출력

2) 리스트의 슬라이싱
    리스트의 일부요소만 이용하고자 하는 경우 슬라이싱을 활용 할 수 있다.
print(li[0:3]) 시작인덱스이상 종료인덱스미만을 추출

3)리스트의 요소 추가와 삭제
 리스트에 새로운 요소를 추가할 때는 append()와 insert()
메서드(함수)를 사용할 수 있다.

기존 요소를 삭제할 때는 pop()메서드를 사용할 수 있다.
scores.pop() # 마지막 요소를 제거합니다.
scores.pop(index) # 해당하는 index번호의 값을 제거

-------------------------------------------------------------
[튜플]
저장된 값을 변경할 수 없는 리스트
프로그램이 실행되는 동안 값이 변경되면 안되는 경우에 사용

튜플은 리스트에 비해 적은 메모리를 필요로 하고, 속도가 빠르다는 장점이 있습니다.

t=(값1,값2,...)
t=tuple()
t=(값1,) 값을 1개만 보관하는 경우 값과 콤마를 반드시 함께 작성해야 합니다. 그렇지 않으면 튜플이 아니라 그냥 값으로 인식되기 때문입니다.

----------------------------------------------------------------
[셋(set)]
수학의 집합 개념을 구현한 자료형입니다.

저장된 값들은 순서가 없기 때문에 인덱싱,슬라이싱이 불가능합니다. 대신 값의 중복저장이 불가능 하다는 특징을 활용해 중복제거용으로 사용할 수 있습니다.

s={1,2,3}
s=set()
--------------------------------------------------------------------
[딕셔너리(dict)]
사전 처럼 단어와 단어의 의미로 구성이 되어있습니다.
키(key)와 값(value)로 이루어져 있습니다.

dict = {키1:값1, 키2:값2,...}
딕셔너리는 인덱스가 존재하지 않는 대신 키를 인덱스 처럼 활용합니다.

딕셔너리에 추가하는법
dict['c']='carrot'

삭제 하는법
딕셔너리명.pop(key)
---------------------------------------------------------------------
[for문]
원하는 횟수만큼 명령을 반복하는 문법

<구조>
for 변수 in 반복가능객체:
	반복실행할 명령

반복가능객체와 for문을 사용하면 몇 번 반복할 것인지, 어떤 범위의 값을 사용할 것인지를 쉽게 파악할 수 있다.

1) 리스트 순회
for 요소 in [리스트]:
	반복실행할 명령

2)리스트 내포
리스트 = [표현식 for 변수 in 반복가능객체]

3)for문과 range()함수
range()함수는 정수 범위를 만들어 낼 때 유용한 함수 입니다.
for문과 range()함수를 함께 사용하면 개발자가 원하는 범위의 값을 쉽게 생성할 수 있습니다.

range(초기값,종료값,증감값)

1. 초기값부터 종료값 이전까지 숫자(n)들의 컬렉션을 만듭니다.
(초기값<=n<종료값)
2. 초기값을 생략하면 0부터 시작을 합니다.
3. 종료값은 생략할 수 없습니다.
4. 증감값을 생략하면 자동으로 1씩 증가합니다.


















































































